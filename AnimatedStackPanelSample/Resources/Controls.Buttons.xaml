<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AnimatedStackPanelSample.Resources">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Icons.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MainMenuButton" TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="{DynamicResource FlatButtonBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource FlatButtonForegroundBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource FlatButtonFontSize}" />
        <Setter Property="Padding"
                Value="10,5,10,5" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Left" Margin="40 0 0 0"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource FlatButtonPressedBackgroundBrush}"
                                    TargetName="Border" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource FlatButtonMouseoverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource CircleButtonFocusVisual}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource GrayBrush3}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Ellipse x:Name="ellipsebg"
                                 Fill="{DynamicResource DarkCyanBrush}"
                                 Opacity="1"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Ellipse x:Name="ellipse"
                                 Margin="4"
                                 Stroke="{TemplateBinding BorderBrush}"
                                 StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />
                        <ContentPresenter x:Name="content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.3"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- some out fading -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Ellipse Margin="8"
                             Stroke="{DynamicResource BlackBrush}"
                             StrokeDashArray="2 2"
                             StrokeThickness="1"
                             SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <VisualBrush Stretch="Fill" x:Key="Icon_appbar_chevron_left" 
                                         Visual="{DynamicResource appbar_chevron_left}" />

    <VisualBrush Stretch="Fill" x:Key="Icon_appbar_chevron_right" 
                                         Visual="{DynamicResource appbar_chevron_right}" />

    <Style x:Key="MenuToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Grid>
                        <Ellipse Fill="{DynamicResource DarkCyanBrush}"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Ellipse x:Name="ellipsebg"
                                 Fill="{DynamicResource DarkCyanBrush}"
                                 Opacity="1"
                                 Margin="4"
                                 StrokeThickness="0" />
                        <Ellipse x:Name="ellipse"
                                 Margin="4"                                 
                                 StrokeThickness="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}, Path=BorderThickness.Left}" />

                        <Rectangle Width="15" x:Name="iconRectangle"
                               Height="15"
                               Fill="{DynamicResource WhiteBrush}" OpacityMask="{DynamicResource Icon_appbar_chevron_left}" RenderTransformOrigin="0.5,0.5" >
                            <Rectangle.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <ContentPresenter x:Name="content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="0.3"
                                                         Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <!-- some out fading -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ellipsebg"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DarkCyan}" />
                            <Setter TargetName="ellipse"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <!--<Setter Property="OpacityMask" TargetName="iconRectangle" Value="{DynamicResource Icon_appbar_chevron_right}"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconRectangle"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="iconRectangle"
                                                 Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                    <!--<Grid>
                    -->
                    <!--<Button Width="50"
                        Height="50"
                        Style="{DynamicResource CircleButtonStyle}">
                        <Rectangle Width="20"
                               Height="20"
                               Fill="{DynamicResource WhiteBrush}"> 
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" x:Name="ExpandPath" 
                                         Visual="{DynamicResource appbar_chevron_left}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Button>-->
                    <!--<Rectangle Fill="{DynamicResource primaryBackgroundBrush}" />
                    <Border Name="ExpandBorder" RenderOptions.EdgeMode="Aliased" BorderBrush="Black" BorderThickness="5">
                        <Path RenderOptions.EdgeMode="Aliased" Name="ExpandPath" Stroke="Black" Margin="0" StrokeThickness="2" Data="M 5 1 L 5 9 M 1 5 L 9 5" />
                    </Border>-->
                    <!--
                </Grid>-->
                    <!--<ControlTemplate.Triggers>
                    -->
                    <!--<Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visual" TargetName="ExpandPath" Value="{DynamicResource appbar_chevron_right}"/>
                    </Trigger>-->
                    <!--<Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="ExpandBorder" Property="BorderBrush" Value="Gray" />
                        <Setter TargetName="ExpandPath" Property="Stroke" Value="Gray" />
                        <Setter Property="Data" TargetName="ExpandPath" Value=""/>
                    </Trigger>-->
                    <!--
                </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>